OK - Criar uma variável escopo no YACC
OK - Criar uma lista encadeada de tabelas hash
OK - Para cada { incrementar a variável escopo e criar uma nova entrada na lista de tabelas
OK - Para cada } decrementar a variável escopo e remover uma entrada da lista de tabelas
- Para cada declaração, escrever na tabela a variável
- Na tabela hash, buscar variável e se já existir reclamar (não substituir, como está atualmente)
- Para cada operação, verificar os tipos

- Repetir os passos acima para as declarações de funções e procedimentos

- Verificar se os tipos das expressões do PARA são aritméticas
OK - FOpen e FClose no YACC

- Corrigir retorno do tipo registro na regra "tipo" no Yacc
- Apagar todos os escopos no final

- Descobrir como corrigir as mensagens de erro (mensagens mais significativas, número da linha)
    http://stackoverflow.com/questions/16443056/yylineno-has-always-the-same-value-in-yacc-file

- apagar variáveis locais e argumentos de um escopo anterior (de mesmo nível)
- P/ segunda:
    - Tabela hash integrada com o reconhecimento de tipos

- Primeiro colocar o id na Hash e depois consultar se tipos se os tipos são compatíveis

erros:
- [] em parâmetros

obs:
- todos os [] estão com valor dentro
- Não usa a mesma palavra para acessar e criar registro
- Sem acentuacao
- sem campos de registro junto com []
- Falta adicionar conversão explícita de tipos
- Adicionar a abertura de arquivo
- Import de libs